/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.cotizacion;

import com.bdconexion.conexion;
import com.categoria.FrameCategoria;
import com.menu.menu2;
import com.toedter.calendar.JDateChooser;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.table.TableColumn;
/**
 *
 * @author ADM
 */
public class FrameGenerarCotizacion extends javax.swing.JFrame {

    int xMouse,yMouse;
    FrameCategoria frame=new FrameCategoria();
    labelX label=new labelX();
    public FrameGenerarCotizacion() {
        initComponents();
        header.setBackground(new Color(0,0,0,0));
        xPanel.setVisible(false);
        prevPanel.setVisible(false);
        jTxtField.setBackground(new Color(0,0,0,0));
        diasHabilesTxt.setVisible(false);
        jTxtField.setVisible(false);
        separador.setVisible(false);
        mostrarCombo(jComboBox1);
        
        widthTable(jTable1);
        firstRowTable(jTable1);
        label.formatXLabel(jTable1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private boolean lastRowEmpty(JTable table){
        int rows=table.getRowCount();
        String secCol=table.getValueAt(rows-1, 1).toString();
        String thrCol=table.getValueAt(rows-1, 2).toString();
        String fouCol=table.getValueAt(rows-1, 3).toString();
        String fifCol=(table.getValueAt(rows - 1, 4) == null) ? "" : table.getValueAt(rows - 1, 4).toString();//si el null la secci√≥n lo convierte en ""
        return secCol.isEmpty()&&thrCol.isEmpty()&&fouCol.isEmpty()&&fifCol.isEmpty();
    }
    private boolean tableEmpty(JTable table){
        int rows=table.getRowCount();
        if(rows==1){
            String secCol=table.getValueAt(rows-1, 1).toString();
            String thrCol=table.getValueAt(rows-1, 2).toString();
            String fouCol=table.getValueAt(rows-1, 3).toString();
            String fifCol=table.getValueAt(rows-1, 4).toString();
            return secCol.isEmpty()&&thrCol.isEmpty()&&fouCol.isEmpty()&&fifCol.isEmpty();
        }
        return false;
    }
    private String returnIdCategoriaFromText(String nombre){
        String idCategoria="";
        String sql="select * from categoria where nombre=?;";
        try(Connection con=conexion.conectar();PreparedStatement pst=con.prepareStatement(sql)){
            pst.setString(1, nombre);
            try(ResultSet rs=pst.executeQuery()){
                if(rs.next()){
                    idCategoria=rs.getString("idCategoria");
                }
            }
        }catch(Exception e){
        }
        return idCategoria;
    }
    private Object[] ctzData(JTable table){// arreglo de los items
        String list[] = null;
        int ind=0;
        if(tableEmpty(table)){
            JOptionPane.showMessageDialog(null, "No hay valores ingresados", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
        else{
            int rows=table.getRowCount();
            if(lastRowEmpty(table)){
                rows=rows-1;
                System.out.println("cant filas: "+rows);
            }
            int lon=rows*5;
            System.out.println("cantidad de valores para arreglo: "+lon);
            list=new String[lon];
            for(int i=0; i<rows; i++){//recorre filas
                for(int j=0; j<5; j++){
                    if(j==4){
                        String idCategoria=returnIdCategoriaFromText(table.getValueAt(i, j).toString());
                        list[ind++]=idCategoria;
                        System.out.println("nombreCategoria: "+idCategoria);
                    }else{
                    System.out.print(table.getValueAt(i, j).toString()+"\t");
                    list[ind++]=table.getValueAt(i, j).toString();
                    }
                }
                System.out.println("\n");
            }
        }
        return list;
    }
    
    private String returnIdCategoria(JComboBox combo){
        String idCategoria="";
        String nombre=combo.getSelectedItem().toString();
        String sql="select * from categoria where nombre=?;";
        try(Connection con=conexion.conectar();PreparedStatement pst=con.prepareStatement(sql)){
            pst.setString(1, nombre);
            try(ResultSet rs=pst.executeQuery()){
                if(rs.next())
                    idCategoria=rs.getString("idCategoria");
            }
        }catch(Exception e){
            
        }
        return idCategoria;
    }
    private String dateCalendar(JDateChooser calendar){
        Date date=(calendar.getDate()!=null) ? calendar.getDate() : new Date();
        SimpleDateFormat sdf=new SimpleDateFormat("YYYY-MM-dd");
        return sdf.format(date);
    }
    private int numberAditionalDayPaying(JTextField txtField){
        int numberDays;
        if(txtField.getText().trim().isEmpty()||txtField.getText().equals("0")){
            numberDays=0;
            System.out.println("nroDia: "+numberDays);
            return numberDays;
        }else{
        numberDays=Integer.parseInt(txtField.getText().trim());
        System.out.println("nroDia: "+numberDays);
        return numberDays;
        }
    }
    private void widthTable(JTable tabla){
        DefaultTableCellRenderer centerTable=new DefaultTableCellRenderer();
        centerTable.setHorizontalAlignment(SwingConstants.CENTER);
        tabla.getColumnModel().getColumn(0).setMaxWidth(35);
        tabla.getColumnModel().getColumn(1).setMaxWidth(60);
        tabla.getColumnModel().getColumn(3).setMaxWidth(60);
        tabla.getColumnModel().getColumn(4).setMaxWidth(90);
        tabla.getColumnModel().getColumn(5).setMaxWidth(18);
        tabla.getTableHeader().setDefaultRenderer(centerTable);
//        tabla.setValueAt(1, 0, 0);
//        tabla.setValueAt("", 0, 1);
//        tabla.setValueAt("", 0, 2);
//        tabla.setValueAt("", 0, 3);
//        tabla.setValueAt("", 0, 4);
    }
    private void aditionalDaysPaying(JLabel label,JTextField txtField, JSeparator separador, JRadioButton raBtn){
        if (buttonSelected(raBtn)){
            label.setVisible(true);
            txtField.setVisible(true);
            separador.setVisible(true);
        }else{
            label.setVisible(false);
            txtField.setVisible(false);
            separador.setVisible(false);
        }
    }
    private boolean buttonSelected(JRadioButton raBtn){
        return raBtn.isSelected();
    }
    private boolean tablaVacia(JTable tabla){
        return tabla.getRowCount()==0;
    }
    private void firstRowTable(JTable table){
        table.setValueAt("1", 0, 0);
        table.setValueAt("", 0, 1);
        table.setValueAt("", 0, 2);
        table.setValueAt("", 0, 3);
        table.setValueAt("", 0, 4);
    }
    private JTable modeloTabla(JTable tabla){
        DefaultTableModel modelo=(DefaultTableModel) tabla.getModel();
        modelo.addRow(new Object[]{1,"","",""});
        return tabla;
    }
    
    public void insertarFilaEnBlanco(JTable tabla, MouseEvent e){
        FrameCategoria frame=new FrameCategoria();
        JComboBox combo=frame.combo();
        DefaultTableModel modelo=(DefaultTableModel) tabla.getModel();
        if(tablaVacia(tabla)){
            modeloTabla(tabla);
        }else{
            int lastRow=modelo.getRowCount()-1;
            int col=tabla.columnAtPoint(e.getPoint());
            if(col!=5 && col>=0){//si se selecciona todas las columnas excepto la 6 y las menores a 0
        if(!tabla.getValueAt(lastRow, 1).toString().trim().isEmpty() ||
                !tabla.getValueAt(lastRow, 2).toString().trim().isEmpty() ||
                !tabla.getValueAt(lastRow, 3).toString().trim().isEmpty() ){
            int ultimoNroItem=(int) tabla.getValueAt(tabla.getRowCount()-1, 0);
            modelo.addRow(new Object[]{ultimoNroItem+1,"","",""});
            TableColumn column=tabla.getColumnModel().getColumn(4);
            column.setCellEditor(new DefaultCellEditor(combo));
            column.setCellRenderer(new DefaultTableCellRenderer(){
                @Override
                public void setValue(Object value){
                    if(value instanceof JComboBox)
                        setText(((JComboBox<?>)value).getSelectedItem().toString());
                    else
                        setText(value != null? value.toString(): "");
                }
            });
            
            }
            }
        }
    }
    private void mostrarCombo(JComboBox combo){
        String sql="select * from clientes;";
        try(Connection con=conexion.conectar();PreparedStatement pst=con.prepareStatement(sql);
                ResultSet rs=pst.executeQuery()){
            while(rs.next()){
                combo.addItem(rs.getString("razonSocial"));
            }
        }catch(Exception e){
        }
    }
    private String retornarIdClientes(JComboBox combo){
        String idClientes="";
        String razonSocial=combo.getSelectedItem().toString();
        String sql="select * from clientes where razonSocial=?;";
        try(Connection con=conexion.conectar();PreparedStatement pst=con.prepareStatement(sql)){
            pst.setString(1, razonSocial);
            try(ResultSet rs=pst.executeQuery()){
                if(rs.next())
                    idClientes=rs.getString("idClientes");
            }
        }catch(Exception e){
            
        }
        return idClientes;
    }
    private String returnNameClient(JComboBox combo){
        String razonSocial="";
        String sql="select * from clientes where idClientes=?";
        String idClientes=retornarIdClientes(combo);
        try(Connection con=conexion.conectar();PreparedStatement pst=con.prepareStatement(sql)){
            pst.setString(1, idClientes);
            try(ResultSet rs=pst.executeQuery()){
                if(rs.next())
                    razonSocial=rs.getString("razonSocial");
            }
        }catch(Exception e){
        }
        return razonSocial;
    }
    private String rucClient(JComboBox combo){
        String ruc="";
        String idClientes=retornarIdClientes(combo);
        String sql="select * from clientes where idClientes=?";
        try(Connection con=conexion.conectar();PreparedStatement pst=con.prepareStatement(sql)){
            pst.setString(1, idClientes);
            try(ResultSet rs=pst.executeQuery()){
                if(rs.next())
                    ruc=rs.getString("ruc");
            }
        }catch(Exception e){
        }
        return ruc;
    }
    private int numberCtz(){
        int newNroCotizacion=0;
        String sql="select * from cotizacion order by nroCotizacion desc;";
        try(Connection con=conexion.conectar();PreparedStatement pst=con.prepareStatement(sql);
                ResultSet rs=pst.executeQuery()){
            if(rs.next()){
                int nroCotizacion=rs.getInt("nroCotizacion");
                newNroCotizacion=nroCotizacion+1;
            }
            System.out.println("nuevo n√∫mero: "+ newNroCotizacion);
        }catch(Exception e){
            
        }
        return newNroCotizacion;
    }
    private Object[] arrangementCtz(JComboBox combo, JTextField jTxt){
    Object arr[]=new Object[6];
        arr[0]=retornarIdClientes(combo);
        arr[1]=returnNameClient(combo);
        arr[2]=rucClient(combo);
        arr[3]=dateCalendar(dateChooser);
        arr[4]=numberAditionalDayPaying(jTxt);//tipo int
        arr[5]=numberCtz();
    return arr;
    }
    private void widthTableCtz(JTable table){
        table.getColumnModel().getColumn(0).setMaxWidth(35);
        table.getColumnModel().getColumn(1).setMaxWidth(60);
        table.getColumnModel().getColumn(3).setMaxWidth(70);
    }
    private boolean preview(Object[] arrangementData,JComboBox combo, JTextField jTxt, Object[] arrangementItems){
//        Object arr[]=arrangementData;
//        Object arr2[]=arrangementItems;
        int nroDiasPagos=(int) arrangementData[4];
        String txtPago=(nroDiasPagos>0)? "Metodo de Pago: credito "+nroDiasPagos+" dias" : 
            "Metodo de Pago: contra entrega";
        
        String firstMenssage="**Vista Previa del PDF**\n\n"
                + "Fecha cotizaci√≥n: "+arrangementData[3]+"\n"
                + "N√∫mero cotizaci√≥n: "+arrangementData[5]+"\n"
                + "Cliente: "+arrangementData[1]+"\n"
                + "Ruc: "+arrangementData[2]+"\n"
                + txtPago+"\n\n";
        
        JTextArea textArea = new JTextArea(firstMenssage);
        textArea.setEditable(false);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        
        String[] header={"Item","Cantidad","Descripci√≥n","Precio"};
        DefaultTableModel model=new DefaultTableModel(header, 0);
        JTable table= new JTable(model);
        widthTableCtz(table);
        table.setDefaultEditor(Object.class, null);
        System.out.println("---");
        System.out.println(arrangementItems.length);
        for(int i=0;i<arrangementItems.length; i+=5){
            Object[] rowData={arrangementItems[i],arrangementItems[i+1],arrangementItems[i+2],arrangementItems[i+3]};
            model.addRow(rowData);
        }
        
        JScrollPane tableScrollPanel=new JScrollPane(table);
        table.setPreferredScrollableViewportSize(new Dimension(900,200));
        table.setFillsViewportHeight(true);
        
        JPanel panel=new JPanel(new BorderLayout());
        panel.add(new JScrollPane(textArea),BorderLayout.NORTH);
        panel.add(tableScrollPanel,BorderLayout.CENTER);
        
        int option=JOptionPane.showConfirmDialog(null, panel, "Vista previa de cotizaci√≥n", 
                JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        return option==JOptionPane.YES_OPTION;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        xTxt = new javax.swing.JLabel();
        xPanel = new javax.swing.JPanel();
        prevTxt = new javax.swing.JLabel();
        prevPanel = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        radioBtn = new javax.swing.JRadioButton();
        pdfTxt = new javax.swing.JLabel();
        pdfPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        PlazoDiasHabilesTxt = new javax.swing.JLabel();
        diasHabilesTxt = new javax.swing.JLabel();
        separador = new javax.swing.JSeparator();
        jTxtField = new javax.swing.JTextField();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 180, -1));

        xTxt.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        xTxt.setForeground(new java.awt.Color(0, 0, 0));
        xTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        xTxt.setText("X");
        xTxt.setToolTipText("");
        xTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        xTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                xTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                xTxtMouseExited(evt);
            }
        });
        jPanel1.add(xTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        xPanel.setBackground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout xPanelLayout = new javax.swing.GroupLayout(xPanel);
        xPanel.setLayout(xPanelLayout);
        xPanelLayout.setHorizontalGroup(
            xPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        xPanelLayout.setVerticalGroup(
            xPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(xPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        prevTxt.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        prevTxt.setForeground(new java.awt.Color(0, 0, 0));
        prevTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prevTxt.setText("<");
        prevTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        prevTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prevTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prevTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                prevTxtMouseExited(evt);
            }
        });
        jPanel1.add(prevTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 50, 40));

        prevPanel.setBackground(new java.awt.Color(82, 83, 87));

        javax.swing.GroupLayout prevPanelLayout = new javax.swing.GroupLayout(prevPanel);
        prevPanel.setLayout(prevPanelLayout);
        prevPanelLayout.setHorizontalGroup(
            prevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        prevPanelLayout.setVerticalGroup(
            prevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(prevPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 50, 40));

        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 40));
        jPanel1.add(dateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 40, 130, -1));

        radioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnActionPerformed(evt);
            }
        });
        jPanel1.add(radioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));

        pdfTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/pdf.png"))); // NOI18N
        pdfTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pdfTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pdfTxtMouseClicked(evt);
            }
        });
        jPanel1.add(pdfTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 160, 70, 70));

        javax.swing.GroupLayout pdfPanelLayout = new javax.swing.GroupLayout(pdfPanel);
        pdfPanel.setLayout(pdfPanelLayout);
        pdfPanelLayout.setHorizontalGroup(
            pdfPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );
        pdfPanelLayout.setVerticalGroup(
            pdfPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        jPanel1.add(pdfPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 160, 70, 70));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item", "Cantidad", "Descripci√≥n", "Precio", "Categoria", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 770, 210));

        PlazoDiasHabilesTxt.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        PlazoDiasHabilesTxt.setText("Plazo dias h√°biles");
        jPanel1.add(PlazoDiasHabilesTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, -1, -1));

        diasHabilesTxt.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        diasHabilesTxt.setText("Dias h√°biles: ");
        jPanel1.add(diasHabilesTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, -1, -1));
        jPanel1.add(separador, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, 30, 20));

        jTxtField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTxtField.setBorder(null);
        jPanel1.add(jTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, 50, 30));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/bg.png"))); // NOI18N
        jPanel1.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void xTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xTxtMouseClicked
        System.exit(0);
    }//GEN-LAST:event_xTxtMouseClicked

    private void prevTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevTxtMouseClicked
        this.setVisible(false);
        menu2 menu=new menu2();
        menu.setVisible(true);
    }//GEN-LAST:event_prevTxtMouseClicked

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_headerMouseDragged

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void xTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xTxtMouseEntered
        xPanel.setVisible(true);
        xTxt.setForeground(Color.white);
    }//GEN-LAST:event_xTxtMouseEntered

    private void xTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xTxtMouseExited
        xPanel.setVisible(false);
        xTxt.setForeground(Color.black);
    }//GEN-LAST:event_xTxtMouseExited

    private void prevTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevTxtMouseEntered
        prevPanel.setVisible(true);
        prevTxt.setForeground(Color.white);
    }//GEN-LAST:event_prevTxtMouseEntered

    private void prevTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevTxtMouseExited
        prevPanel.setVisible(false);
        prevTxt.setForeground(Color.black);
    }//GEN-LAST:event_prevTxtMouseExited

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        insertarFilaEnBlanco(jTable1, evt);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        retornarIdClientes(jComboBox1);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void pdfTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pdfTxtMouseClicked
//        System.out.println("----------------");
//        numberAditionalDayPaying(jTxtField);
//        System.out.println("---");
//        System.out.println(dateCalendar(dateChooser));
//        System.out.println("---");
//        retornarIdClientes(jComboBox1);
//        System.out.println("---");
//        ctzData(jTable1);
        System.out.println("Aqui est√° el arreglo");
        Object arr[]=arrangementCtz(jComboBox1, jTxtField);
        Object arr2[]=ctzData(jTable1);
        System.out.println("------------------");
        boolean accept=preview(arr, jComboBox1, jTxtField, arr2);
        if(accept){
            clasePdf pdf=new clasePdf();
            pdf.generarPdf(arr, arr2);
        }
//        for(int i=0;i<arr.length;i++){
//            System.out.print(arr[i]+" |");
//        }
    }//GEN-LAST:event_pdfTxtMouseClicked

    private void radioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnActionPerformed
        aditionalDaysPaying(diasHabilesTxt, jTxtField, separador, radioBtn);
    }//GEN-LAST:event_radioBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameGenerarCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameGenerarCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameGenerarCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameGenerarCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameGenerarCotizacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PlazoDiasHabilesTxt;
    private javax.swing.JLabel bg;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel diasHabilesTxt;
    private javax.swing.JPanel header;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTxtField;
    private javax.swing.JPanel pdfPanel;
    private javax.swing.JLabel pdfTxt;
    private javax.swing.JPanel prevPanel;
    private javax.swing.JLabel prevTxt;
    private javax.swing.JRadioButton radioBtn;
    private javax.swing.JSeparator separador;
    private javax.swing.JPanel xPanel;
    private javax.swing.JLabel xTxt;
    // End of variables declaration//GEN-END:variables
}
